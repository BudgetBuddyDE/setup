version: '3.8'
services:
  postgres:
    restart: always
    image: postgres:latest
    volumes:
      - ../database/schema.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - TZ=${TZ:-Europe/Berlin}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - '5532:5432'
    networks:
      - database
      - backend

  redis:
    restart: always
    image: redis:latest
    command: bash -c "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}"
    volumes:
      - ./data/redis:/data
    ports:
      - '6479:6379'
    networks:
      - database
      - backend

  backend:
    depends_on:
      - postgres
      - redis
    restart: always
    image: ghcr.io/budgetbuddyde/backend:latest-dev
    environment:
      - PG_HOST=postgres
      - PG_USER=${POSTGRES_USER}
      - PG_PASSWORD=${POSTGRES_PW}
      - PG_DB=${POSTGRES_DB:-postgres}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SESSION_COOKIE_DOMAIN=${SESSION_COOKIE_DOMAIN}
      - MAIL_SERVICE_HOST=http://mail_service:8090
    ports:
      - '8081:8080'
    networks:
      - database
      - backend

  mail_service:
    depends_on:
      - backend
    restart: always
    image: ghcr.io/budgetbuddyde/mail-service:latest-dev
    environment:
      - ENV=PROD
      - RESEND_API_KEY=${RESEND_API_KEY}
      - BACKEND_HOST=http://backend:8080
      - SERVICE_USER_UUID=${MAIL_SERVICE_UUID}
      - SERVICE_USER_PASSWORD=${MAIL_SERVICE_PASSWORD}
      - PORT=8090
    ports:
      - '8071:8090'
    networks:
      - backend

  file_service:
    depends_on:
      - backend
    restart: always
    image: ghcr.io/budgetbuddyde/file-service:latest-dev
    environment:
      - ENV=production
      - UPLOAD_DIR=uploads/
      - BACKEND_HOST=http://backend:8080
      - HOST_URL=${HOST_URL}
      - PORT=8180
    volumes:
      - ${FILE_SERVICE_DATA_LOCATION:-./data}/uploads:/usr/src/app/uploads
    ports:
      - '8091:8180'
    networks:
      - backend

  stock_service:
    depends_on:
      - backend
      - postgres
    restart: always
    image: ghcr.io/budgetbuddyde/stock-service:latest-dev
    environment:
      - ENV=production
      - PORT=7070
      - POCKETBASE_URL=${STOCK_SERVICE_POCKETBASE_URL}
      - SERVICE_ACCOUNT_EMAIL=${STOCK_SERVICE_SERVICE_ACCOUNT_EMAIL}
      - SERVICE_ACCOUNT_PASSWORD=${STOCK_SERVICE_SERVICE_ACCOUNT_PASSWORD}
      - STOCK_API_URL=${STOCK_SERVICE_STOCK_API_URL}
      - ENABLE_BACKGROUND_JOBS=true
    ports:
      - '7080:7070'
    networks:
      - backend
      - database

networks:
  database:
  backend:
