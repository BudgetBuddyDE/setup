version: '3.8'
services:
  postgres:
    restart: always
    image: postgres:latest
    volumes:
      - ./database/schema.sql:/docker-entrypoint-initdb.d/init.sql
      - ${DATA_LOCATION:-./data}/postgres:/var/lib/postgresql/data
    environment:
      - TZ=${TZ:-Europe/Berlin}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - '5432:5432'
    networks:
      - database
      - backend

  redis:
    restart: always
    image: redis:latest
    command: bash -c "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}"
    volumes:
      - ${DATA_LOCATION:-./data}/redis:/data
    ports:
      - '6379:6379'
    networks:
      - database
      - backend

  backend:
    depends_on:
      - postgres
      - redis
    restart: always
    image: ghcr.io/budgetbuddyde/backend:latest
    environment:
      - PG_HOST=postgres
      - PG_USER=${POSTGRES_USER}
      - PG_PASSWORD=${POSTGRES_PW}
      - PG_DB=${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SESSION_COOKIE_DOMAIN=${SESSION_COOKIE_DOMAIN}
      - MAIL_SERVICE_HOST=${MAIL_SERVICE_HOST}
    ports:
      - '8080:8080'
    networks:
      - database
      - backend

  subscription_service:
    depends_on:
      - backend
    restart: always
    image: ghcr.io/budgetbuddyde/subscription-service:latest
    environment:
      - BACKEND_URL=${BACKEND_URL}
      - SERVICE_UUID=${SUBSCRIPTION_SERVICE_UUID}
      - SERVICE_PASSWORD=${SUBSCRIPTION_SERVICE_PASSWORD}
    networks:
      - backend

  mail_service:
    depends_on:
      - backend
    restart: always
    image: ghcr.io/budgetbuddyde/mail-service:latest
    environment:
      - ENV=PROD
      - RESEND_API_KEY=${RESEND_API_KEY}
      - BACKEND_URL=${BACKEND_URL}
      - SERVICE_UUID=${MAIL_SERVICE_UUID}
      - SERVICE_PASSWORD=${MAIL_SERVICE_PASSWORD}
    networks:
      - backend

networks:
  database:
  backend:
